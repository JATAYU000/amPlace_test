name: PR check

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

permissions:
  pull-requests: write
  contents: write

jobs:
  Audit-the-json-content:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR is from a fork
        id: pr_source
        run: |
          if [[ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]]; then
            echo "PR is from a fork."
            echo "::set-output name=is_fork::true"
          else
            echo "PR is not from a fork."
            echo "::set-output name=is_fork::false"
          fi

      - name: Checkout the base branch (PR target)
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.event.pull_request.base.ref }}
          fetch-depth: 0

      - name: Set up Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Get the PR author username
        id: pr_user
        run: |
          PR_USER=${{ github.event.pull_request.user.login }}
          echo "The PR was created by $PR_USER"
          echo "::set-output name=pr_user::$PR_USER"

      - name: Fetch the PR branch from fork
        run: |
          git remote add fork https://github.com/${{ github.event.pull_request.head.repo.full_name }}.git
          git fetch fork ${{ github.event.pull_request.head.ref }}:pr-branch

      - name: Create a new branch with the PR author username
        id: create_branch
        run: |
          PR_USER=${{ steps.pr_user.outputs.pr_user }}
          BRANCH_NAME=$PR_USER
          COUNT=1

          # Check if a branch with the username already exists in the base repo
          while git ls-remote --exit-code --heads origin "refs/heads/$BRANCH_NAME"; do
            COUNT=$((COUNT+1))
            BRANCH_NAME="${PR_USER}${COUNT}"
          done

          echo "::set-output name=branch_name::$BRANCH_NAME"
          
          # Create the new branch from the base branch
          git checkout -b "$BRANCH_NAME"

      - name: Merge the PR branch into the new branch
        run: |
          BRANCH_NAME=${{ steps.create_branch.outputs.branch_name }}
          git merge --no-ff pr-branch

      - name: Push the new branch to the repository
        run: |
          BRANCH_NAME=${{ steps.create_branch.outputs.branch_name }}
          git push https://$PAT_TOKEN@github.com/${{ github.repository }} "$BRANCH_NAME"
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
